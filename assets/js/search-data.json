{
  
    
        "post0": {
            "title": "fastpages 소개",
            "content": "블로그 고민 . 그동안 cgi와 버클리DB(gdbm이었던가)로 된 게시판을 시작으로 MySQL과 워드프레스 등 설치형 블로그와, 네이버 블로그, (구글) 블로거, 워드프레스닷컴, 미디엄 등의 서비스형 블로그를 사용했었다. 각각의 블로그 시스템은 장단점이 있었는데, 이런 장단점 때문에 블로그를 그만둔 건 아니었다. . 최근에 다시 블로그를 써보고 싶어졌는데, 아래와 같은 조건을 만족하는 블로그 시스템이 있나 궁금해졌다. . 편집 MathJax와 같이 수식 표현 가능 | vi나 vscode와 같은 텍스트 에디터로 편집이 가능 | 웹으로 편집 가능 | . | 포맷 마크다운과 같은 마크업 언어 사용 가능 | 주피터 노트북을 올릴 수 있으면 좋겠음 | . | 만약 설치형 블로그라면 최근 코드로 업데이트하는 과정이 고통스럽지 않기를 | 데이터 저장 포맷을 변경하거나 DB를 업데이트하는 과정이 고통스럽지 않기를 | 설치와 업데이트 과정을 익히는 데 드는 품이 적게 들기를 | . | 만약 서비스형 블로그라면 무료라면 좋겠음 | 도메인도 적당하면 좋겠고, path도 여러 개 붙일 수 있으면 좋겠음 | . | . 기대를 만족할 것 같은 설치형 블로그로는 Jekyll과 Github Pages의 조합이었다. Jekyll로 정적인 페이지로 만들고 Github Pages로 올리는 것이었다. 이 조합이 가장 좋아 보였지만, 실행하지 않았다. Jekyll은 루비로 구현되어 있어서 루비 버전과 Jekyll gem을 업데이트하느라 신경쓰일 것 같고, 포스트를 수정하고 추가할 때마다 생성해서 푸시하는 게 번거로울 것 같고, 주피터 노트북을 convert하는 과정 역시 번거로울 것 같고 (github push hook에 스크립트를 넣으면 될까), 블로그 편집 환경을 어딘가 개인 시스템이나 개인화된 환경에서 유지1하는게 오래가지 않을 것 같아서였다. 아, 이제는 귀찮음이 블로그를 쓰지 않는 주요한 이유가 된 것일까. . fastpages . 그러다 fastpages를 알게 되었다. . We&#39;re launching `fastpages`, a platform which allows you to host a blog for free, with no ads. You can blog with @ProjectJupyter notebooks, @office Word, directly from @github&#39;s markdown editor, etc.Nothing to install, &amp; setup is automated!https://t.co/dNSA0oQUrN . &mdash; Jeremy Howard (@jeremyphoward) February 24, 2020 To be clear: @GitHub Actions has been a game changer for us. It means we can build amazing stuff like fastpages with @HamelHusain, entirely for free, and keeping all the data open.We&#39;re really grateful to @GitHub for making it available, and for supporting @HamelHusain&#39;s work. https://t.co/7qWUnFgILf . &mdash; Jeremy Howard (@jeremyphoward) March 6, 2020 Github Actions를 사용해서 Jekyll로 포스트를 가공하고 Github Pages로 바로 올려주는 코드라고 했다. Github Actions가 생소했다. 잠깐 살펴보니, git event에 대해 workflow를 실행시켜주는 서비스다. 그러니까 소스 코드와 형상 관리에 필요한 Github 서비스에 덧붙여서, 무료로 컴퓨팅 환경을 제공해준다는 말이다. 옳커니! . fastpages 설치 . 셋업 가이드에 따라서 설치해보기로 했다. 방법은 간단했다. . github.com 로그인 | fastpages 프로젝트 접속 후 템플릿 생성 주의사항으로는 {your-username}.github.io와 같이 자신의 계정의 최상위 pages 주소를 사용하지 말라고 한다. 아마 이미 생성해놓은 저장소와 충돌하는 걸 염려해서일 것 같다. path없이 사용할 수 있는 설정도 _config.yml에 있다. | . | 여기까지 하고 조금 기다리면, Pull Requests에 “Initial Setup”이라는 PR이 뜬다. PR에서 시키는 대로 4096비트 RSA 키를 패스워드 없이 만들고, Settings &gt; Secrets 에 비밀키를 SSH_DEPLOY_KEY라는 이름으로 등록하고, Settings &gt; Deploy keys에 적당한 이름으로 공개키를 등록한다. 여기서 주의할 점은 비밀키 이름이다. 비밀키 이름을 매뉴얼대로 하자. 그렇게 안하면, PR을 merge한 후 action을 실행할 때 에러가 난다. 물론 매뉴얼과 동일한 키를 다시 등록하고 action을 다시 실행하면 잘 된다. | 그리고 이어서 PR을 Merge하면 설치 과정이 진행된다. 저장소의 Actions 탭에서 진행 경과를 확인할 수 있다. 몇 분 기다리면 PR에 있는 주소로 페이지가 뜬다. | . fastpages 업그레이드 . 그래, 잘 뜬다. 그런데 과연 업그레이드는 수월할 것인가. 소스 프로젝트에서 변경된 코드를 내가 어떻게 가져와야하는가. 소스 프로젝트의 변경 사항을 내 프로젝트로 merge해야 하는가. 그 장대한 diff를 들여다봐야 하는가. . fastpages의 업그레이드 문서를 읽어볼 차례다. . 수동으로 하려면, 블로그 포스트가 있는 _notebooks, _word, _posts 디렉토리 아래의 파일들을 백업하고, 처음부터 템플릿 생성을 하는 방법. 좀 귀찮긴 하지만 간단하게끔 유지하기 위한 최선의 선택이다. . 자동으로 하려면, 이슈 탭에서 새 이슈를 누르고, ‘[fastpages] Automated Upgrade’ 템플릿으로 이슈를 만들고, submit하면, 한참 기다리면 된다고 한다. . 자동화 방법으로 한번 해봤더니, 액션에 추가되는데 소식이 없다. 이슈 로그에 최신 코드라서 할일이 없단다. 다음번 코드 수정이 있으면 해봐야겠지만, 이렇게 잘 된다면 아주 만족스럽다. . redjade pages 설치 . 설치와 업그레이드를 테스트해봤으니, 테스트 저장소는 지우고, 이제 앞으로 쓸 환경을 꾸려보자. 그래서 몇 가지 간단한 수정. . 설정 수정 : 페이지 제목과 설명, 수식 옵션 수정 | favicon 비활성화, 템플릿 문서 숨기기, 대문 페이지와 About 페이지 수정 | utterances 설치 | . 브라우저로 수정해서 커밋/푸시할 수도 있고, 별도의 SSH Key를 등록한 후 git으로 clone해서 수정하고 커밋/푸시할 수도 있다. 푸시, 액션 실행, 반영까지는 몇 분 걸리지만 만족스럽다. . 그래서 . 기본 한글 폰트가 우악스럽다는 점 외에는, 익숙해져야겠지만 만족스럽다. 덧글 기능까지 확인하면 끝. 쓸만한 블로그 시스템을 만든 개발자분들께 감사드린다. 보은의 의미로 작성한 fastpages 설치기를 마친다. . Jekyll 환경을 구성하지 않고도 사용하는 방법이 있었다! 포스트가 감사하게도 참 친절하다. 쉽고 빠르게 수준 급의 GitHub 블로그 만들기 - jekyll remote theme으로 &#8617; . |",
            "url": "https://redjade.github.io/pages/fastpages/2020/03/17/fastpages.html",
            "relUrl": "/fastpages/2020/03/17/fastpages.html",
            "date": " • Mar 17, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # Title &gt; Awesome summary - toc: true- branch: master- badges: true- comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . #collapse-hide import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . #collapse-show cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # single-value selection over [Major_Genre, MPAA_Rating] pairs # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(movies).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(movies).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=alt.Y(&#39;IMDB_Rating:Q&#39;, axis=alt.Axis(minExtent=30)), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=600, height=400 ) . Example 3: More Tooltips . # select a point for which to provide details-on-demand label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=700, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; df = pd.read_json(movies) # display table with pandas df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://redjade.github.io/pages/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://redjade.github.io/pages/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About",
          "content": "redjade입니다. . 이 웹사이트는 fastpages 1로 만들었습니다. . 주피터 노트북, 마크다운, Word 포맷을 지원하는 블로깅 플랫폼. &#8617; . |",
          "url": "https://redjade.github.io/pages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

}