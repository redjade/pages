<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="https://redjade.github.io/pages/feed.xml" rel="self" type="application/atom+xml" /><link href="https://redjade.github.io/pages/" rel="alternate" type="text/html" /><updated>2020-03-30T09:54:30-05:00</updated><id>https://redjade.github.io/pages/feed.xml</id><title type="html">redjade pages</title><subtitle>Pages by redjade.</subtitle><entry><title type="html">읽기</title><link href="https://redjade.github.io/pages/meta%20pseudo%20label/2020/03/30/meta-pseudo-label.html" rel="alternate" type="text/html" title="&lt;Meta Pseudo Label&gt; 읽기" /><published>2020-03-30T00:00:00-05:00</published><updated>2020-03-30T00:00:00-05:00</updated><id>https://redjade.github.io/pages/meta%20pseudo%20label/2020/03/30/meta-pseudo-label</id><content type="html" xml:base="https://redjade.github.io/pages/meta%20pseudo%20label/2020/03/30/meta-pseudo-label.html">&lt;h1 id=&quot;meta-pseudo-labels-훑기&quot;&gt;Meta Pseudo Labels 훑기&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;심층신경망 학습은 네트웍의 예측과 타겟 분포 사이의 cross entropy를 최소화하는 것으로 해석할 수 있음.&lt;/li&gt;
  &lt;li&gt;지도학습에서 타겟 분포는 보통 실제 one-hot 벡터.&lt;/li&gt;
  &lt;li&gt;준지도학습(semi-supervised learning)에서는 보통 사전학습한 teacher model이 타겟 분포를 생성하고, 메인 네트웍을 학습함.&lt;/li&gt;
  &lt;li&gt;이 논문은 메인 네트웍의 학습 상태를 기반으로 타겟 분포 조정을 학습하면 더 나은 성능에 이르게 됨을 보임.
    &lt;ul&gt;
      &lt;li&gt;메타-학습 알고리즘을 제안하는데, teacher가 메인 네트웍의 학습을 개선하는 방향으로 학습 데이터의 타겟 분포를 조정함.&lt;/li&gt;
      &lt;li&gt;따로 떼놓은 검증 데이터(held-out validation data)로 계산한 policy gradient로 teacher를 학습함.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;실험은 CIFAR-10, SVHN, ImageNet 에서 state-of-the-art.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;들어가기&quot;&gt;들어가기&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;cross entropy loss : KL divergence from a target distribution over all the possible classes to the distribution predicted by a network
    &lt;ul&gt;
      &lt;li&gt;여기서 자연스레 이어지는 질문: 이 타겟 분포는 무엇이어야 하지?&lt;/li&gt;
      &lt;li&gt;지도학습의 경우, one-hot, smoothed version of one-hot(label smoothing&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; &lt;sup id=&quot;fnref:2&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;)&lt;/li&gt;
      &lt;li&gt;준지도학습의 경우, pseudo label라고도 부르는 타겟 분포를 사용하는데,&lt;/li&gt;
      &lt;li&gt;label 있는 데이터로 학습한 날카로워지고 무뎌진(약해진) teacher 모델을 이용해서&lt;/li&gt;
      &lt;li&gt;label 없는 데이터를 처리한 분포를 타겟 분포로 사용한다.&lt;sup id=&quot;fnref:3&quot;&gt;&lt;a href=&quot;#fn:3&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt; &lt;sup id=&quot;fnref:4&quot;&gt;&lt;a href=&quot;#fn:4&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt;&lt;/li&gt;
      &lt;li&gt;이 두 경우 모두 학습 전의 _사전 정보(prior)_로 디자인한 경험지식(heuristic)이라서, 학습되는 신경망의 학습 상태에 맞춰서 조정할 수 없다는 약점이 내재해 있다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;그래서 타겟 분포를 메타-학습할 수 있는 방법을 제안함.
    &lt;ul&gt;
      &lt;li&gt;teacher model 디자인 : 메인 모델(앞으로 student 모델이라고 부르겠음)을 학습할 때 사용할 input data에 대해서 분포를 할당함.&lt;/li&gt;
      &lt;li&gt;student model 학습 : student model을 검증 데이터셋으로 진행한 성능 평가를 근거로 해서, 다음번에 검증 데이터셋으로 더 나은 성능을 보일 만한 타겟 분포를 teacher가 생성함.&lt;/li&gt;
      &lt;li&gt;이 방법이 pseudo label 기법과 유사해서 _Meta Pseudo Label_이라고 이름붙임.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;참고&quot;&gt;참고&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://arxiv.org/abs/2003.10580&quot;&gt;Meta Pseudo Labels&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;용어&quot;&gt;용어&lt;/h1&gt;
&lt;h2 id=&quot;label-smoothing&quot;&gt;Label Smoothing&lt;/h2&gt;
&lt;h2 id=&quot;준지도학습에서-pseudo-label&quot;&gt;준지도학습에서 pseudo label&lt;/h2&gt;
&lt;h2 id=&quot;pseudo-label&quot;&gt;Pseudo Label&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://deeplearning.net/wp-content/uploads/2013/03/pseudo_label_final.pdf&quot;&gt;Pseudo-Label&lt;/a&gt; 방법은, 사전학습된 모델로 label 없는 데이터를 처리한 예측 확률의 최대값을 해당 데이터의 타겟 클래스로 삼는 방법이다. 사전학습된 모델을 이용해서, label 데이터와 unlabel 데이터를 &lt;em&gt;동시에&lt;/em&gt; 학습한다. unlabel 데이터의 loss function은 지도학습의 loss와 동일한 형태를 가지되 regularizer 스타일로 loss function에 더하며 hyperparameter로 강도를 조절한다.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;cluster assumption&lt;/em&gt;&lt;sup id=&quot;fnref:1:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;에 따르면, 일반화를 위해서 결정 경계(decision boundary)는 저밀도 구간에 있어야 한다. 한편, &lt;em&gt;entropy regularization&lt;/em&gt;&lt;sup id=&quot;fnref:1:2&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;에 따르면 레이블 없는 데이터가 보여주는 클래스 확률 분포의 조건부 엔트로피를 최소화할 때 클래스 사이의 밀도 분포를 낮게 만들어준다. 즉, 클래스 사이의 분포를 덜 겹치게하기 위해서 unlabel 데이터의 엔트로피를 최소화하는 것이다. Pseudo Label 논문은 pseudo label로 추가한 loss가 entropy regularization의 형태와 동일함을 보이고 있다.&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;Yves  Grandvalet  and  Yoshua  Bengio,   Entropy  Regularization,    In: Semi-Supervised  Learning,  pages 151–168, MIT Press, 2006. &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt; &lt;a href=&quot;#fnref:1:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;sup&gt;2&lt;/sup&gt;&lt;/a&gt; &lt;a href=&quot;#fnref:1:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;sup&gt;3&lt;/sup&gt;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://arxiv.org/abs/1512.00567&quot;&gt;Rethinking the Inception Architecture for Computer Vision&lt;/a&gt; &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:3&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://arxiv.org/abs/1904.12848&quot;&gt;Unsupervised Data Augmentation for Consistency Training&lt;/a&gt; &lt;a href=&quot;#fnref:3&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:4&quot;&gt;
      &lt;p&gt;&lt;a href=&quot;https://arxiv.org/abs/1905.02249&quot;&gt;MixMatch: A Holistic Approach to Semi-Supervised Learning&lt;/a&gt; &lt;a href=&quot;#fnref:4&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html">Meta Pseudo Labels 훑기</summary></entry><entry><title type="html">노트 작성법 소개</title><link href="https://redjade.github.io/pages/note%20taking/%EB%85%B8%ED%8A%B8%20%EC%9E%91%EC%84%B1%EB%B2%95/2020/03/18/note-taking.html" rel="alternate" type="text/html" title="노트 작성법 소개" /><published>2020-03-18T00:00:00-05:00</published><updated>2020-03-18T00:00:00-05:00</updated><id>https://redjade.github.io/pages/note%20taking/%EB%85%B8%ED%8A%B8%20%EC%9E%91%EC%84%B1%EB%B2%95/2020/03/18/note-taking</id><content type="html" xml:base="https://redjade.github.io/pages/note%20taking/%EB%85%B8%ED%8A%B8%20%EC%9E%91%EC%84%B1%EB%B2%95/2020/03/18/note-taking.html">&lt;h1 id=&quot;참고&quot;&gt;참고&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;국문 번역 트윗 : https://twitter.com/Imseong/status/1239212007779229696&lt;/li&gt;
  &lt;li&gt;원문 : https://twitter.com/intentionally/status/1234918066649272325
    &lt;ul&gt;
      &lt;li&gt;모아서 보려면 https://threader.app/thread/1234918066649272325&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;원래 트윗과 덧글의 링크
    &lt;ul&gt;
      &lt;li&gt;https://fortelabs.co/blog/how-to-take-smart-notes/&lt;/li&gt;
      &lt;li&gt;https://jeffhuang.com/productivity_text_file/&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">참고 국문 번역 트윗 : https://twitter.com/Imseong/status/1239212007779229696 원문 : https://twitter.com/intentionally/status/1234918066649272325 모아서 보려면 https://threader.app/thread/1234918066649272325 원래 트윗과 덧글의 링크 https://fortelabs.co/blog/how-to-take-smart-notes/ https://jeffhuang.com/productivity_text_file/</summary></entry><entry><title type="html">fastpages 소개</title><link href="https://redjade.github.io/pages/fastpages/2020/03/17/fastpages.html" rel="alternate" type="text/html" title="fastpages 소개" /><published>2020-03-17T00:00:00-05:00</published><updated>2020-03-17T00:00:00-05:00</updated><id>https://redjade.github.io/pages/fastpages/2020/03/17/fastpages</id><content type="html" xml:base="https://redjade.github.io/pages/fastpages/2020/03/17/fastpages.html">&lt;h1 id=&quot;블로그-고민&quot;&gt;블로그 고민&lt;/h1&gt;

&lt;p&gt;그동안 cgi와 버클리DB(gdbm이었던가)로 된 게시판을 시작으로 MySQL과 워드프레스 등
설치형 블로그와, 네이버 블로그, (구글) 블로거, 워드프레스닷컴, 미디엄 등의
서비스형 블로그를 사용했었다. 각각의 블로그 시스템은 장단점이 있었는데, 이런
장단점 때문에 블로그를 그만둔 건 아니었다.&lt;/p&gt;

&lt;p&gt;최근에 다시 블로그를 써보고 싶어졌는데, 아래와 같은 조건을 만족하는 블로그
시스템이 있나 궁금해졌다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;편집
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.mathjax.org/&quot;&gt;MathJax&lt;/a&gt;와 같이 수식 표현 가능&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.vim.org/&quot;&gt;vi&lt;/a&gt;나 &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;vscode&lt;/a&gt;와 같은 텍스트 에디터로 편집이 가능&lt;/li&gt;
      &lt;li&gt;웹으로 편집 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;포맷
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://guides.github.com/features/mastering-markdown/&quot;&gt;마크다운&lt;/a&gt;과 같은
마크업 언어 사용 가능&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://jupyter.org/&quot;&gt;주피터 노트북&lt;/a&gt;을 올릴 수 있으면 좋겠음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;만약 설치형 블로그라면
    &lt;ul&gt;
      &lt;li&gt;최근 코드로 업데이트하는 과정이 고통스럽지 않기를&lt;/li&gt;
      &lt;li&gt;데이터 저장 포맷을 변경하거나 DB를 업데이트하는 과정이 고통스럽지 않기를&lt;/li&gt;
      &lt;li&gt;설치와 업데이트 과정을 익히는 데 드는 품이 적게 들기를&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;만약 서비스형 블로그라면
    &lt;ul&gt;
      &lt;li&gt;무료라면 좋겠음&lt;/li&gt;
      &lt;li&gt;도메인도 적당하면 좋겠고, path도 여러 개 붙일 수 있으면 좋겠음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;기대를 만족할 것 같은 설치형 블로그로는 &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;과 
&lt;a href=&quot;https://pages.github.com/&quot;&gt;Github Pages&lt;/a&gt;의 조합이었다.
Jekyll로 정적인 페이지로 만들고 &lt;a href=&quot;https://pages.github.com/&quot;&gt;Github Pages&lt;/a&gt;로
올리는 것이었다. 이 조합이 가장 좋아 보였지만, 실행하지 않았다.
Jekyll은 루비로 구현되어 있어서 루비 버전과 Jekyll gem을 업데이트하느라
신경쓰일 것 같고, 포스트를 수정하고 추가할 때마다 &lt;strong&gt;생성해서&lt;/strong&gt; 푸시하는 게 번거로울
것 같고, 주피터 노트북을 convert하는 과정 역시 번거로울 것 같고 (github push
hook에 스크립트를 넣으면 될까), 블로그 편집 환경을 어딘가 개인 시스템이나
개인화된 환경에서 유지&lt;sup id=&quot;fnref:1&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;하는게 오래가지 않을 것 같아서였다.
아, 이제는 귀찮음이 블로그를 쓰지 않는 주요한 이유가 된 것일까.&lt;/p&gt;

&lt;h1 id=&quot;fastpages&quot;&gt;fastpages&lt;/h1&gt;

&lt;p&gt;그러다 &lt;a href=&quot;https://github.com/fastai/fastpages&quot;&gt;fastpages&lt;/a&gt;를 알게 되었다.&lt;/p&gt;

&lt;div class=&quot;jekyll-twitter-plugin&quot;&gt;&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;We&amp;#39;re launching `fastpages`, a platform which allows you to host a blog for free, with no ads. You can blog with &lt;a href=&quot;https://twitter.com/ProjectJupyter?ref_src=twsrc%5Etfw&quot;&gt;@ProjectJupyter&lt;/a&gt; notebooks, &lt;a href=&quot;https://twitter.com/Office?ref_src=twsrc%5Etfw&quot;&gt;@office&lt;/a&gt; Word, directly from &lt;a href=&quot;https://twitter.com/github?ref_src=twsrc%5Etfw&quot;&gt;@github&lt;/a&gt;&amp;#39;s markdown editor, etc.&lt;br /&gt;&lt;br /&gt;Nothing to install, &amp;amp; setup is automated!&lt;a href=&quot;https://t.co/dNSA0oQUrN&quot;&gt;https://t.co/dNSA0oQUrN&lt;/a&gt;&lt;/p&gt;&amp;mdash; Jeremy #masks4all Howard (@jeremyphoward) &lt;a href=&quot;https://twitter.com/jeremyphoward/status/1232059428238581760?ref_src=twsrc%5Etfw&quot;&gt;February 24, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;div class=&quot;jekyll-twitter-plugin&quot;&gt;&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;To be clear: &lt;a href=&quot;https://twitter.com/github?ref_src=twsrc%5Etfw&quot;&gt;@GitHub&lt;/a&gt; Actions has been a game changer for us. It means we can build amazing stuff like fastpages with &lt;a href=&quot;https://twitter.com/HamelHusain?ref_src=twsrc%5Etfw&quot;&gt;@HamelHusain&lt;/a&gt;, entirely for free, and keeping all the data open.&lt;br /&gt;&lt;br /&gt;We&amp;#39;re really grateful to &lt;a href=&quot;https://twitter.com/github?ref_src=twsrc%5Etfw&quot;&gt;@GitHub&lt;/a&gt; for making it available, and for supporting &lt;a href=&quot;https://twitter.com/HamelHusain?ref_src=twsrc%5Etfw&quot;&gt;@HamelHusain&lt;/a&gt;&amp;#39;s work. &lt;a href=&quot;https://t.co/7qWUnFgILf&quot;&gt;https://t.co/7qWUnFgILf&lt;/a&gt;&lt;/p&gt;&amp;mdash; Jeremy #masks4all Howard (@jeremyphoward) &lt;a href=&quot;https://twitter.com/jeremyphoward/status/1236037582363832320?ref_src=twsrc%5Etfw&quot;&gt;March 6, 2020&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/features/actions&quot;&gt;Github Actions&lt;/a&gt;를 사용해서 Jekyll로
포스트를 가공하고 Github Pages로 바로 올려주는 코드라고 했다. Github Actions가 
생소했다. 잠깐 살펴보니, git event에 대해 workflow를 실행시켜주는 서비스다.
그러니까 소스 코드와 형상 관리에 필요한 Github 서비스에 덧붙여서, 무료로 컴퓨팅
환경을 제공해준다는 말이다. 옳커니!&lt;/p&gt;

&lt;h1 id=&quot;fastpages-설치&quot;&gt;fastpages 설치&lt;/h1&gt;

&lt;p&gt;셋업 가이드에 따라서 설치해보기로 했다. &lt;a href=&quot;https://github.com/fastai/fastpages#setup-instructions&quot;&gt;방법&lt;/a&gt;은 간단했다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/&quot;&gt;github.com&lt;/a&gt; 로그인&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fastai/fastpages&quot;&gt;fastpages&lt;/a&gt; 프로젝트 접속 후 &lt;a href=&quot;https://github.com/fastai/fastpages/generate&quot;&gt;템플릿 생성&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;주의사항으로는 &lt;code class=&quot;highlighter-rouge&quot;&gt;{your-username}.github.io&lt;/code&gt;와 같이 자신의 계정의 최상위
pages 주소를 사용하지 말라고 한다. 아마 이미 생성해놓은 저장소와 충돌하는 걸
염려해서일 것 같다. path없이 사용할 수 있는 설정도 &lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;에 있다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;여기까지 하고 조금 기다리면, Pull Requests에 “Initial Setup”이라는 PR이 뜬다.
PR에서 시키는 대로 4096비트 RSA 키를 패스워드 없이 만들고, Settings &amp;gt; Secrets 에
비밀키를 &lt;code class=&quot;highlighter-rouge&quot;&gt;SSH_DEPLOY_KEY&lt;/code&gt;라는 이름으로 등록하고, Settings &amp;gt; Deploy keys에 적당한
이름으로 공개키를 등록한다. 여기서 주의할 점은 비밀키 이름이다.
&lt;strong&gt;비밀키 이름을 매뉴얼대로 하자.&lt;/strong&gt;
그렇게 안하면, PR을 merge한 후 action을 실행할 때 에러가 난다. 물론 매뉴얼과
동일한 키를 다시 등록하고 action을 다시 실행하면 잘 된다.&lt;/li&gt;
  &lt;li&gt;그리고 이어서 PR을 Merge하면 설치 과정이 진행된다. 저장소의 Actions 탭에서 
진행 경과를 확인할 수 있다. 몇 분 기다리면 PR에 있는 주소로 페이지가 뜬다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;fastpages-업그레이드&quot;&gt;fastpages 업그레이드&lt;/h1&gt;

&lt;p&gt;그래, 잘 뜬다. 그런데 과연 업그레이드는 수월할 것인가. 소스 프로젝트에서 변경된
코드를 내가 어떻게 가져와야하는가. 소스 프로젝트의 변경 사항을 내 프로젝트로
merge해야 하는가. 그 장대한 diff를 들여다봐야 하는가.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/fastai/fastpages/blob/master/_fastpages_docs/UPGRADE.md&quot;&gt;fastpages의 업그레이드 문서&lt;/a&gt;를 읽어볼 차례다.&lt;/p&gt;

&lt;p&gt;수동으로 하려면, 블로그 포스트가 있는 &lt;code class=&quot;highlighter-rouge&quot;&gt;_notebooks&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;_word&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; 디렉토리
아래의 파일들을 백업하고, 처음부터 템플릿 생성을 하는 방법. 좀 귀찮긴 하지만
간단하게끔 유지하기 위한 최선의 선택이다.&lt;/p&gt;

&lt;p&gt;자동으로 하려면, 이슈 탭에서 새 이슈를 누르고, ‘[fastpages] Automated Upgrade’ 템플릿으로 이슈를 만들고, submit하면, 한참 기다리면 된다고 한다.&lt;/p&gt;

&lt;p&gt;자동화 방법으로 한번 해봤더니, 액션에 추가되는데 소식이 없다. 이슈 로그에 
최신 코드라서 할일이 없단다. 다음번 코드 수정이 있으면 해봐야겠지만, 
이렇게 잘 된다면 아주 만족스럽다.&lt;/p&gt;

&lt;h1 id=&quot;redjade-pages-설치&quot;&gt;redjade pages 설치&lt;/h1&gt;

&lt;p&gt;설치와 업그레이드를 테스트해봤으니, 테스트 저장소는 지우고, 이제 앞으로 쓸 
환경을 꾸려보자. 그래서 몇 가지 간단한 수정.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/redjade/pages/commit/95f0deeef77cd8c2e244f2b793d655e5f303b2c4&quot;&gt;설정 수정&lt;/a&gt; : 페이지 제목과 설명, 수식 옵션 수정&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/redjade/pages/commit/666291126f13090b7ed55654445adf554f474457&quot;&gt;favicon 비활성화&lt;/a&gt;, &lt;a href=&quot;https://github.com/redjade/pages/commit/4ccf0ad81f331e3b34fab4f396f6d59ec6076025&quot;&gt;템플릿 문서 숨기기&lt;/a&gt;, &lt;a href=&quot;https://github.com/redjade/pages/commit/abab61fa436b0314b2d6b0a62cc7147c6f8722c2&quot;&gt;대문 페이지&lt;/a&gt;와 &lt;a href=&quot;https://github.com/redjade/pages/commit/ee7d156afabe81518442d5a36f4cd26a915ed32e&quot;&gt;About 페이지&lt;/a&gt; 수정&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/apps/utterances&quot;&gt;utterances 설치&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;브라우저로 수정해서 커밋/푸시할 수도 있고, 별도의 SSH Key를 등록한 후 
git으로 clone해서 수정하고 커밋/푸시할 수도 있다. 푸시, 액션 실행, 반영까지는
몇 분 걸리지만 만족스럽다.&lt;/p&gt;

&lt;h1 id=&quot;기능은-어떤가&quot;&gt;기능은 어떤가&lt;/h1&gt;

&lt;p&gt;먼저 MathJax.&lt;/p&gt;

&lt;span class=&quot;katex-display&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mtext&gt;softmax&lt;/mtext&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;z&lt;/mi&gt;&lt;msub&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/msub&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mfrac&gt;&lt;mrow&gt;&lt;mi&gt;exp&lt;/mi&gt;&lt;mo&gt;⁡&lt;/mo&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;z&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/msub&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;mrow&gt;&lt;munder&gt;&lt;mo&gt;∑&lt;/mo&gt;&lt;mi&gt;j&lt;/mi&gt;&lt;/munder&gt;&lt;mi&gt;exp&lt;/mi&gt;&lt;mo&gt;⁡&lt;/mo&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;z&lt;/mi&gt;&lt;mi&gt;j&lt;/mi&gt;&lt;/msub&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;/mfrac&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\text{softmax}(z)_i = \frac{\exp(z_i)}{\sum_j \exp(z_j)}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord text&quot;&gt;&lt;span class=&quot;mord&quot;&gt;softmax&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.04398em;&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.31166399999999994em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2777777777777778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:2.5488180000000003em;vertical-align:-1.1218180000000002em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mopen nulldelimiter&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mfrac&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.427em;&quot;&gt;&lt;span style=&quot;top:-2.314em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mop&quot;&gt;&lt;span class=&quot;mop op-symbol small-op&quot; style=&quot;position:relative;top:-0.0000050000000000050004em;&quot;&gt;∑&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.16195399999999993em;&quot;&gt;&lt;span style=&quot;top:-2.40029em;margin-left:0em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot; style=&quot;margin-right:0.05724em;&quot;&gt;j&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.43581800000000004em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.16666666666666666em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mop&quot;&gt;exp&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.04398em;&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.311664em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot; style=&quot;margin-right:0.05724em;&quot;&gt;j&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.286108em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.23em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;frac-line&quot; style=&quot;border-bottom-width:0.04em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.677em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mop&quot;&gt;exp&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathdefault&quot; style=&quot;margin-right:0.04398em;&quot;&gt;z&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.31166399999999994em;&quot;&gt;&lt;span style=&quot;top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathdefault mtight&quot;&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.1218180000000002em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose nulldelimiter&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;

&lt;p&gt;작성 방식. clone해서 터미널이나 vscode로 편집할 수 있다. 반영은 푸시. 웹으로는,
github에 접속해서 파일 찾아서 편집하고 바로 커밋할 수 있다. 웹에서 커밋하면
이어서 액션이 실행되어 반영된다.&lt;/p&gt;

&lt;p&gt;포맷은 마크다운, 주피터 노트북, 마이크로소프트 워드를 지원한다고.
예제를 살펴보자. (워드로 된 예제는 못 찾았다.)&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;마크다운 : &lt;a href=&quot;https://fastpages.fast.ai/markdown/2020/01/14/test-markdown-post.html&quot;&gt;An Example Markdown Post&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;주피터 노트북 : &lt;a href=&quot;https://fastpages.fast.ai/jupyter/2020/02/20/test.html&quot;&gt;Fastpages Notebook Blog Post&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;그래서&quot;&gt;그래서&lt;/h1&gt;

&lt;p&gt;기본 한글 폰트가 우악스럽다는 점 외에는, fastpages 사용에 익숙해져야겠지만,
꽤 만족스럽다. 덧글 기능까지 확인하면 끝. 쓸만한 블로그 시스템을 만든 &lt;a href=&quot;https://github.com/fastai/fastpages/graphs/contributors&quot;&gt;개발자분들&lt;/a&gt;께 감사드린다.
보은의 의미로 작성한 fastpages 설치기를 마친다.&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot;&gt;
      &lt;p&gt;Jekyll 환경을 구성하지 않고도 사용하는 방법이 있었다! 포스트가 감사하게도 참 친절하다. &lt;a href=&quot;https://dreamgonfly.github.io/2018/01/27/jekyll-remote-theme.html&quot;&gt;쉽고 빠르게 수준 급의 GitHub 블로그 만들기 - jekyll remote theme으로&lt;/a&gt; &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html">블로그 고민</summary></entry></feed>